apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: argus-ucp-adapter
  labels:
    type: services
objects:
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: argus-ucp-adapter
      labels:
        app: argus-ucp-adapter
        name: argus-ucp-adapter
    spec:
      selector:
        matchLabels:
          app: argus-ucp-adapter
          name: argus-ucp-adapter
      template:
        metadata:
          annotations: {sidecar.istio.io/inject: 'true'}
          labels:
            app: argus-ucp-adapter
            name: argus-ucp-adapter
            version: 1
        spec:
          containers:
            - env:
                - name: PROJECT_NAME
                  valueFrom:
                    fieldRef: {fieldPath: metadata.namespace}
              image: registry.ca.sbrf.ru/ci01994970/ci02539503_cc360/rhel7-java-synapse-services/srvupdatemonitoringcriterion/argus-updatemonitoringcriterion-crmorg-ci02539503:0.1.0.7
              name: argus-ucp-adapter
              imagePullPolicy: IfNotPresent
              ports:
                - containerPort: 8080
                  protocol: TCP
              resources:
                limits: ${{LIMITS}}
                requests: ${{REQUESTS}}
              envFrom:
                - configMapRef:
                    name:  argus-ucp-adapter-config
              volumeMounts:
                - {mountPath: /opt/synapse/logs, name: synapselogs}
                - {mountPath: /fluent-bit/etc/, name: fluent-bit, readOnly: true}
                - {name: application-config, mountPath: /deployments/config, readOnly: true}
              livenessProbe:
                failureThreshold: 4
                httpGet: {path: /actuator/health, port: 8080}
                initialDelaySeconds: 120
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 5
              readinessProbe:
                failureThreshold: 4
                httpGet: {path: /actuator/health, port: 8080}
                initialDelaySeconds: 120
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 5
            - image: registry.ca.sbrf.ru/ci00734898/ci00685811_synapse/fluent-bit:1.2.2
              imagePullPolicy: IfNotPresent
              name: fluent-bit
              resources:
                limits: ${{LIMITS_FLUENT}}
                requests: ${{REQUESTS_FLUENT}}
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - {mountPath: /opt/synapse/logs, name: synapselogs}
                - {mountPath: /fluent-bit/etc/, name: fluent-bit, readOnly: true}
                - {mountPath: /fluent-bit/cert/, name: fluent-bit-cert, readOnly: true}
          volumes:
            - emptyDir: {}
              name: synapselogs
            - configMap: {name: fluent-bit}
              name: fluent-bit
            - name: fluent-bit-cert
              secret:
                defaultMode: 420
                optional: true
                secretName: fluent-bit-cert
            - name: application-config
              configMap:
                name: argus-ucp-adapter-config
                items:
                  - {key: application.yml, path: application.yml}
                  - {key: extservices.yml, path: extservices.yml}
                  - {key: replacements.yml, path: replacements.yml}

  - apiVersion: v1
    kind: Service
    metadata:
      name: argus-ucp-adapter
    spec:
      selector:
        app: argus-ucp-adapter
      ports:
        - name: http
          port: 8080
          targetPort: 8080
      type: ClusterIP

  - apiVersion: v1
    kind: ConfigMap
    metadata:
      name: argus-ucp-adapter-config
    data:
      application.yml: |-
        server:
          port: 8080
          ssl.enabled: false
      extservices.yml: |-
        extservices:
          getRelatedIndividual:
            name: "getRelatedIndividual"
            timeout: 1
            url: "http://localhost:8080/gri"
            transformRequest: false
            transformResponse: true
      replacements.yml: |-
        replacements:
          replacementList:
            - service: "getRelatedIndividual"
              source: "@class"
              target: "class"

parameters:
  - name: REQUESTS
    description: Лимиты для контейнера приложения (JSON)
    required: true
  - name: LIMITS
    description: Лимиты для контейнера приложения (JSON)
    required: true
  - name: REQUESTS_FLUENT
    description: Лимиты для Fluent
    required: true
  - name: LIMITS_FLUENT
    description: Лимиты для Fluent
    required: true